// param.js;

var kOffence = -1; 
var kDefence = 1; 

// poor style - too many global variables. 
// 0- player
// 1- null
// 2- computer
var pattern = new Array(
	"00000", 
	
	"200002", 
	"20002", 
	"2002", 
	
	"100001", 
	
	"100002", "200001", 
	"01000", "00010", 
	"00100", 
	"110001", "100011", 
	"101001", "100101", 
	
	"100012", "210001", 
	"11000", "00011", 
	"01100", "00110", 
	"01010", 
	"01001", "10010", 
	"10100", "00101", 
	"111001", "100111", 
	"110101", "101011", 
	"110011", 
	"101101", 
	
	"11100", "00111", 
	"11010", "01011", 
	"11001", "10011", 
	"01110",
	"01101", "10110", 
	"10101"
); 

var loopSize = pattern.length; 

var sig = new Array(
	0, 
	1, 1, 1,
	2, 
	3, 3, 3, 3, 3, 3, 3, 3, 3, 
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5
); 

// case that there is already a chesspiece on the cross;
var MIN_INT = -65535; 
/*
var score = new Array(
	65536, 
	-16, 
	8192, 
	1024, 
	128, 
	16
);*/

var score = new Array(
	65536, 
	-16, 
	65536, 
	1024, 
	128, 
	16
);

// jump point; 
var jp = new Array(0, 1, 4, 5, 14, 31, 41); 

var positionScoringMatrix = [
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
	[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
	[0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0],
	[0, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 0],
	[0, 1, 2, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 2, 1, 0],
	[0, 1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 3, 2, 1, 0],
	[0, 1, 2, 3, 4, 5, 6, 6, 6, 6, 6, 6, 6, 5, 4, 3, 2, 1, 0],
	[0, 1, 2, 3, 4, 5, 6, 7, 7, 7, 7, 7, 6, 5, 4, 3, 2, 1, 0],
	[0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0],
	[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0],
	[0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0],
	[0, 1, 2, 3, 4, 5, 6, 7, 7, 7, 7, 7, 6, 5, 4, 3, 2, 1, 0],
	[0, 1, 2, 3, 4, 5, 6, 6, 6, 6, 6, 6, 6, 5, 4, 3, 2, 1, 0],
	[0, 1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 3, 2, 1, 0],
	[0, 1, 2, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 2, 1, 0],
	[0, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 0],
	[0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0],
	[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
]; 

// COMMENT LATER; 
// console.log(pattern.length); 
// console.log(sig.length); 
// console.log(positionScoringMatrix.length); 